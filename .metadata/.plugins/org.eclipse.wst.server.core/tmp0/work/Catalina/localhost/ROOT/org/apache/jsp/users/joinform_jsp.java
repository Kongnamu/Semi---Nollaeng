/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.83
 * Generated at: 2024-04-04 05:53:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.users;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class joinform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../resources/css/join.css\">\r\n");
      out.write("<script src=\"../resources/js/jquery-3.7.1.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write(" function validateSignUpForm() {\r\n");
      out.write("     var username = document.querySelector('.signup-form input[type=\"text\"]').value;\r\n");
      out.write("     var password = document.querySelector('.signup-form input[type=\"password\"]').value;\r\n");
      out.write("     var confirmPassword = document.querySelector('.signup-form input[type=\"password\"]').value;\r\n");
      out.write("     var contact = document.querySelector('.signup-form input[type=\"tel\"]').value;\r\n");
      out.write("\r\n");
      out.write(" if (!/^[a-z0-9]{5,20}$/i.test(username)) {\r\n");
      out.write("     alert(\"아이디는 영문 소문자, 숫자로 이루어진 5~20자여야 합니다.\");\r\n");
      out.write("     return false;\r\n");
      out.write(" }else if (!/^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\-]).{8,}$/.test(password)) {\r\n");
      out.write("     alert(\"비밀번호는 영문, 숫자, 특수문자를 포함한 8자 이상이어야 합니다.\");\r\n");
      out.write("     return false;\r\n");
      out.write(" }else if (!/^\\d{10,11}$/.test(contact)) {\r\n");
      out.write("     alert(\"연락처는 하이픈(-)을 제외한 숫자 10~11자를 입력해주세요.\");\r\n");
      out.write("     return false;\r\n");
      out.write(" }\r\n");
      out.write(" return true; // 모든 유효성 검사를 통과하면 true 반환\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(" function checkPasswordMatch() {\r\n");
      out.write("     var password = document.querySelector('.signup-form input[type=\"password\"]').value;\r\n");
      out.write("     var confirmPassword = document.getElementById('confirmPassword').value;\r\n");
      out.write("\r\n");
      out.write("     var message = document.getElementById('confirmMessage');\r\n");
      out.write("\r\n");
      out.write(" if (password === confirmPassword) {\r\n");
      out.write("     message.innerHTML = '비밀번호가 일치합니다.';\r\n");
      out.write(" }else {\r\n");
      out.write("     message.innerHTML = '비밀번호가 일치하지 않습니다.';\r\n");
      out.write(" }\r\n");
      out.write(" message.style.fontSize = '12px';\r\n");
      out.write(" message.style.fontFamily = 'Noto Sans KR', sans-serif;\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write(" function checkId(){\r\n");
      out.write("	 if(t_id.value == \"\"){\r\n");
      out.write("			alert(\"아이디를 입력해주세요\")\r\n");
      out.write("			t_id.focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			type: \"get\",\r\n");
      out.write("			dataType: \"text\",\r\n");
      out.write("			url: \"/users/checkId\",\r\n");
      out.write("			data: {id: $(\"#t_id\").val()}, //id \r\n");
      out.write("			success: function(data){\r\n");
      out.write("				var messageElement = $(\"#message-container\");\r\n");
      out.write("				\r\n");
      out.write("				if(data == \"usable\"){\r\n");
      out.write("					$(\"#btnChk\").attr(\"value\", \"Y\"); //버튼 value값을 'Y'로 설정\r\n");
      out.write("					$(\"#message\").text(\"사용할 수 있는 ID입니다.\")\r\n");
      out.write("								 .removeClass(\"error-message\")  // 에러 메시지 클래스 제거\r\n");
      out.write("                    			 .addClass(\"success-message\");\r\n");
      out.write("				}else{ //data == \"not_usable\"\r\n");
      out.write("					$(\"#message\").text(\"이미 가입된 ID입니다.\")\r\n");
      out.write("								 .removeClass(\"error-message\")  // 에러 메시지 클래스 제거\r\n");
      out.write("       			 				 .addClass(\"success-message\");\r\n");
      out.write("				}\r\n");
      out.write("			},\r\n");
      out.write("			error: function(){\r\n");
      out.write("				alert(\"에러 발생!\")\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write(" }\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <!-- 회원가입 폼 -->\r\n");
      out.write("    <div id=\"signupForm\" class=\"signup-form\">\r\n");
      out.write("        <h3>회원가입</h3>\r\n");
      out.write("        <form action=\"../insertmember.do\" method=\"post\" name=\"member\" onsubmit=\"return validateSignUpForm()\">\r\n");
      out.write("            <label for=\"id\" class=\"label-with-button\">\r\n");
      out.write("                <p class=\"label-txt\">아이디</p>\r\n");
      out.write("                <div class=\"label-box\" id=\"input-container\">\r\n");
      out.write("				    <input type=\"text\" class=\"input\" placeholder=\"영문 소문자, 숫자 5~20자의 아이디를 입력해주세요.\" id=\"t_id\" name=\"id\">\r\n");
      out.write("				    <button type=\"button\" class=\"button2\" id=\"btnChk\" onclick=\"checkId()\">중복 확인</button>\r\n");
      out.write("                <p id=\"message\"></p>\r\n");
      out.write("                </div>\r\n");
      out.write("                 <div class=\"line-box-id\">\r\n");
      out.write("                 	<div class=\"line\"></div>\r\n");
      out.write("                 </div>\r\n");
      out.write("            </label>\r\n");
      out.write("            <label for=\"passwd\">\r\n");
      out.write("                <p class=\"label-txt\">비밀번호</p>\r\n");
      out.write("                <input type=\"password\" class=\"input\" \r\n");
      out.write("                	   placeholder=\"영문, 숫자, 특수문자를 포함한 8자 이상의 비밀번호를 입력해주세요.\" id=\"passwd\" name=\"passwd\">\r\n");
      out.write("                <div class=\"line-box\">\r\n");
      out.write("                    <div class=\"line\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </label>\r\n");
      out.write("            <label>\r\n");
      out.write("            	<p class=\"label-txt\">비밀번호 확인</p>\r\n");
      out.write("            	<input type=\"password\" class=\"input\" id=\"confirmPassword\" oninput=\"checkPasswordMatch()\">\r\n");
      out.write("            	<div class=\"line-box\">\r\n");
      out.write("                    <div class=\"line\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div id=\"confirmMessage\"></div>\r\n");
      out.write("            </label>\r\n");
      out.write("            <label for=\"name\">\r\n");
      out.write("                <p class=\"label-txt\">이름</p>\r\n");
      out.write("                <input type=\"text\" class=\"input\" id=\"name\" name=\"name\">\r\n");
      out.write("                <div class=\"line-box\">\r\n");
      out.write("                    <div class=\"line\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </label>\r\n");
      out.write("            <label for=\"phone\">\r\n");
      out.write("                <p class=\"label-txt\">연락처</p>\r\n");
      out.write("                <input type=\"tel\" class=\"input\"\r\n");
      out.write("                	   placeholder=\"하이픈(-)을 제외한 숫자 10~11자를 입력해주세요.\" id=\"phone\" name=\"phone\">\r\n");
      out.write("                <div class=\"line-box\">\r\n");
      out.write("                    <div class=\"line\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </label>\r\n");
      out.write("            <label for=\"addr\">\r\n");
      out.write("                <p class=\"label-txt\">주소</p>\r\n");
      out.write("                <input type=\"text\" class=\"input\"\r\n");
      out.write("                	   placeholder=\"Ex. 서울특별시 영등포구 선유동2로 57\" id=\"addr\" name=\"addr\">\r\n");
      out.write("                <div class=\"line-box\">\r\n");
      out.write("                    <div class=\"line\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </label>\r\n");
      out.write("            <button type=\"submit\" id=\"signup_button_submit\">가입하기</button>\r\n");
      out.write("            <button type=\"button\" id=\"back_button\"><a href=\"../main.jsp\">취소</a></button>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
